@*TODO: create a ViewModel*@
@model JoF.Rail.Core.Models.LiveDepartureBoard.Result.ServiceItemModel

@{
    var service = Model;
    var here = (string)ViewData["here"];
    var there = (string)ViewData["there"];
    var previousTrainLength = 0;
    var bDisplayedTrain = false;
    var cols = 6;

    //var cols = (int)(12 / Math.Max(service.PreviousCallingPoints.Count(), service.SubsequentCallingPoints.Count()));

    var showDelay = service.PreviousCallingPoints.Any(x => x.CallingPoints.Any(y => (y.ActualTimeDelay != "-" && y.EstimatedTimeDelay != "-" && y.EstimatedTimeDelay != null)))
                    || service.EstimatedTimeDepartureDelay != "-"
                    || service.EstimatedTimeArrivalDelay != "-"
                    || service.SubsequentCallingPoints.Any(x => x.CallingPoints.Any(y => y.EstimatedTimeDelay != "-"));

    var showCoaches = service.PreviousCallingPoints.Any(x => x.CallingPoints.Any(y => y.TrainLength != 0))
                    || service.TrainLength != 0
                    || service.TrainLength != 0
                    || service.SubsequentCallingPoints.Any(x => x.CallingPoints.Any(y => y.TrainLength != 0));

    <table class="table-sm table-borderless m-auto">
        <thead>
            <tr>
                <th></th>
                <th>Station</th>
                <th>Sched</th>
                <th>Exp</th>
                @if (showDelay)
                {
                    cols -= 1;
                    <th><i class="fas fa-clock"></i></th>
                }
                @if (showCoaches)
                {
                    cols -= 1;
                    <th>Coaches</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var c in service.PreviousCallingPoints)
            {
                bDisplayedTrain = false;

                @foreach (var p in c.CallingPoints)
                {
                    if (previousTrainLength != 0 && previousTrainLength != p.TrainLength)
                    {
                        <tr>
                            <td colspan="@cols">
                                <hr />
                            </td>
                        </tr>
                    }

                    previousTrainLength = p.TrainLength;

                    var isBold = p.Location.Equals(there) ? "font-weight-bold" : "";

                        <tr class="@isBold">
                            <td class="text-right align-middle" style="position:relative; top:-11px;">
                                @if (p.ActualTime == null && !bDisplayedTrain)
                                {
                                    bDisplayedTrain = true;
                                    <i class="fas fa-train"></i>
                                }
                            </td>
                            <td class="align-middle">@p.Location</td>
                            <td class="align-middle">@p.ScheduledTime</td>
                            <td class="align-middle">
                                @if (p.ActualTime != null)
                                {
                                    <span>@p.ActualTime</span>
                                }
                                else
                                {
                                    <span class="font-italic">@p.EstimatedTime</span>
                                }
                            </td>
                            @if (showDelay)
                            {
                                <td class="align-middle small text-danger">&nbsp;@(p.ActualTimeDelay ?? p.EstimatedTimeDelay)</td>
                            }
                            @if (showCoaches)
                            {
                                <td class="align-middle text-center">
                                    @if (p.TrainLength != 0)
                                    {@p.TrainLength}
                                </td>
                            }
                        </tr>
                    @if (p.AdHocAlerts.Count() > 0)
                    {
                        <tr>
                            <td class="text-danger">
                                @foreach (var a in p.AdHocAlerts)
                                {
                                    @a<br />
                                }
                            </td>
                        </tr>
                    }
                }
            }

            @if (previousTrainLength != 0 && previousTrainLength != service.TrainLength)
            {
                previousTrainLength = service.TrainLength;
                <tr><td colspan="@cols"><hr /></td></tr>
            }

                <tr class="font-weight-bold">
                    <td class="text-right align-middle" style="top:-18px;">
                        @if (!bDisplayedTrain)
                        {
                            bDisplayedTrain = true;
                            <i class="fas fa-train"></i>
                        }
                    </td>
                    <td class="align-middle">@here</td>
                    <td class="align-middle">
                        @if (service.ScheduledTimeArrival != null)
                        {
                            <div>a. @service.ScheduledTimeArrival</div>
                        }
                        @if (service.ScheduledTimeDeparture != null)
                        {
                            <div>d. @service.ScheduledTimeDeparture</div>
                        }
                    </td>
                    <td class="align-middle">
                        <div class="font-italic">@service.EstimatedTimeArrival</div>
                        <div class="font-italic">@service.EstimatedTimeDeparture</div>
                    </td>
                    @if (showDelay)
                    {
                        <td class="align-middle">
                            <div class="font-italic small text-danger">&nbsp;@service.EstimatedTimeArrivalDelay</div>
                            <div class="font-italic small text-danger">&nbsp;@service.EstimatedTimeDepartureDelay</div>
                        </td>
                    }
                    @if (showCoaches)
                    {
                        <td class="align-middle text-center">
                            @if (service.TrainLength != 0)
                            {@service.TrainLength}
                        </td>
                    }
                    </tr>

            @foreach (var c in service.SubsequentCallingPoints)
            {
                @foreach (var p in c.CallingPoints)
                {
                    if (previousTrainLength != 0 && previousTrainLength != p.TrainLength)
                    {
                        <tr colspan="@cols"><td><hr /></td></tr>
                    }

                    previousTrainLength = p.TrainLength;

                    var isBold = p.Location.Equals(there) ? "font-weight-bold" : "";

                        <tr class="@isBold align-items-center">
                            <td class="align-middle"></td>
                            <td class="align-middle">@p.Location</td>
                            <td class="align-middle">@p.ScheduledTime</td>
                            <td class="font-italic align-middle">@p.EstimatedTime</td>
                            @if (showDelay)
                            {
                                <td class="font-italic align-middle small text-danger">&nbsp;@p.EstimatedTimeDelay</td>
                            }
                            @if (showCoaches)
                            {
                                <td class="align-middle text-center">
                                    @if (p.TrainLength != 0)
                                    {@p.TrainLength}
                                </td>
                            }
                        </tr>

                    @if (p.AdHocAlerts.Count() > 0)
                    {
                        <tr>
                            <td colspan="5" class="text-danger">
                                @foreach (var a in p.AdHocAlerts)
                                {
                                    @a<br />
                                }
                            </td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
}
